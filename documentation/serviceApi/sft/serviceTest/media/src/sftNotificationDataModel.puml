@startuml sftNotificationDataModel

skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

enum Error400Code {

    missingQueryParameter
    missingQueryValue
    invalidQuery
    invalidBody
}
class Error {

    reason*: string
    message: string
    referenceError: uri
}



class Error400 {

    code*: Error400Code
}
Error <|-- Error400



class Error401 {

    code*: Error401Code
}
Error <|-- Error401



enum Error401Code {

    missingCredentials
    invalidCredentials
}
class Error403 {

    code*: Error403Code
}
Error <|-- Error403



enum Error403Code {

    accessDenied
    forbiddenRequester
    tooManyUsers
}
class Error408 {

    code*: string
}
Error <|-- Error408



class Error500 {

    code*: string
}
Error <|-- Error500



class Event {

    eventId*: string
    eventTime*: date-time
}



class TestJobEvent {

    eventType*: TestJobEventType
}
Event <|-- TestJobEvent

TestJobEvent *-->"1" TestJobEventPayload : event


class TestJobEventPayload {

    id*: string
    href: string
}



enum TestJobEventType {

    testJobCreateEvent
    testJobAttributeValueChangeEvent
    testJobStateChangeEvent
}
class TestJobProcessEvent {

    eventType*: TestJobProcessEventType
}
Event <|-- TestJobProcessEvent

TestJobProcessEvent *-->"1" TestJobProcessEventPayload : event


class TestJobProcessEventPayload {

    id*: string
    href: string
}



enum TestJobProcessEventType {

    cancelTestJobStateChangeEvent
    modifyTestJobStateChangeEvent
    suspendTestJobStateChangeEvent
    resumeTestJobStateChangeEvent
}
class TestProfileEvent {

    eventType*: TestProfileEventType
}
Event <|-- TestProfileEvent

TestProfileEvent *-->"1" TestProfileEventPayload : event


class TestProfileEventPayload {

    id*: string
    href: string
}



enum TestProfileEventType {

    testProfileCreateEvent
    testProfileAttributeValueChangeEvent
    testProfileDeleteEvent
    testProfileStateChangeEvent
}
@enduml
