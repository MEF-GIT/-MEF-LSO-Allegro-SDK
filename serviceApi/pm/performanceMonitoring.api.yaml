openapi: 3.0.1
info:
  description: |
    **This file forms part of MEF W143**

    **This API implements part of Business Requirements & Use Cases described
    in MEF W133.1.**

    **This specification represents MEF work in progress and is subject to
    change.**

    MEF Performance Monitoring API allows to manage Performance Profiles, 
    Performance Jobs and collect Performance Reports, as well as receive 
    notifications related to these entities. This allows managing the 
    performance objectives that are typically associated with an SLS. 

    Three types of performance-related entities are supported by the API:
    - **Performance Monitoring Profile** - templates used to simplify the PM 
    Job provisioning. Common attributes for PM Jobs are defined in the PM 
    Profile. One PM Profile can be used by multiple PM Jobs but PM Jobs can 
    be created without relationship to PM Profile.

    - **Performance Monitoring Job** - provisions the performance monitoring
    objectives specific to each subject of monitoring which could be an 
    ordered pair (i.e., two UNIs) or an entity (i.e., port).

    - **Performance Monitoring Report** - The execution of PM Job results in
    Performance Monitoring collections that provide Buyer/Client with 
    performance objective results. In some cases performance collection
    can be produced on Buyer/Client request which can be useful for collecting
    passive statistics or historical data.

    List of use cases supported by the API:
    - Create Performance Monitoring Profile
    - Retrieve list of Performance Monitoring Profiles
    - Retrieve Performance Monitoring Profile by Profile Identifier
    - Modify Performance Monitoring Profile
    - Delete Performance Monitoring Profile
    - Subscribe to Performance Monitoring Profile Notifications
    - Unsubscribe from Performance Monitoring Profile Notifications

    - Create Performance Monitoring Job
    - Retrieve list of Performance Monitoring Jobs
    - Retrieve Performance Monitoring Job by Job Identifier
    - Modify Performance Monitoring Job
    - Retrieve Modify Performance Monitoring Job List
    - Retrieve Modify Performance Monitoring Job by Identifier
    - Cancel Performance Monitoring Job
    - Retrieve Cancel Performance Monitoring Job List
    - Retrieve Cancel Performance Monitoring Job by Identifier
    - Suspend Performance Monitoring Job
    - Resume Performance Monitoring Job
    - Subscribe to Performance Monitoring Job Notifications
    - Unsubscribe from Performance Monitoring Job Notifications

    - Create Performance Monitoring Report
    - Retrieve list of Performance Monitoring Reports
    - Retrieve Performance Report by Report Identifier
    - Subscribe to Performance Monitoring Report Notifications
    - Unsubscribe from Performance Monitoring Report Notifications

    Copyright 2024 MEF Forum and its contributors

    This file includes content based on the TM Forum Performance Management API
    (TMF628 v5.0.0) available at 
    https://www.tmforum.org/oda/open-apis/directory/performance-management-api-TMF628/v5.0, which is licensed by 
    the TM Forum under the Apache License version 2.0. Such content has been
    modified by the MEF Forum and its contributors.
  title: Performance Monitoring
  version: 3.0.0-RC
servers:
  - url: 'https://{serverBase}/mefApi/allegro/performanceMonitoring/v3/'
    variables:
      serverBase:
        default: mef.net
        description: The base of SOF's URL.
tags:
  - name: performanceJob
  - name: modifyPerformanceJob
  - name: suspendPerformanceJob
  - name: resumePerformanceJob
  - name: cancelPerformanceJob
  - name: performanceJobComplexQuery
  - name: performanceProfile
  - name: performanceProfileOperations
  - name: performanceReport
  - name: performanceReportComplexQuery
  - name: trackingRecord
  - name: events subscription
paths:
  /performanceJob:
    get:
      description: >-
        The Buyer/Client requests a list of PM Jobs based on a set
        of filter criteria. The Seller/Server returns a summarized list of PM 
        Jobs. For each PM Job returned, the Seller/Server also provides a 
        Performance Job Identifier that uniquely identifiers this PM Job within
        the Seller/Server. The order of the elements returned to the 
        Buyer/Client is defined by the Seller/Server (e.g. natural order) and
        does not change between the pages.
      operationId: listPerformanceJob
      parameters:
        - description: >-
            Identifier assigned and understandable by Buyer/Client to 
            facilitate search requests.
          explode: true
          in: query
          name: buyerJobId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifier of a Service Endpoint.
          explode: true
          in: query
          name: serviceIdFrom
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifier of a Service Endpoint.
          explode: true
          in: query
          name: serviceIdTo
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifier of an Entity.
          explode: true
          in: query
          name: entityId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifier of Performance Profile used as a template for 
            Performance Job.
          explode: true
          in: query
          name: performanceProfileId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            State of the Performance Job. See `PerformanceJobStateType` 
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            type: string
            enum:
              - acknowledged
              - cancelled
              - completed
              - inProgress
              - pending
              - pendingCancel
              - rejected
              - resourcesUnavailable
              - scheduled
              - suspended
          style: form
        - description: Date when the job was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Date when the job was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Type of the Performance Job.
          explode: true
          in: query
          name: jobType
          required: false
          schema:
            $ref: '#/components/schemas/JobType'
          style: form
        - description: Sampling rate of the collection of measurements.
          explode: true
          in: query
          name: granularity
          required: false
          schema:
            $ref: '#/components/schemas/Interval'
          style: form
        - description: >-
            Definition of time period during which report will be active 
            and collect measurements.
          explode: true
          in: query
          name: reportingPeriod
          required: false
          schema:
            $ref: '#/components/schemas/Interval'
          style: form
        - description: Identifier of consuming application.
          explode: true
          in: query
          name: consumingApplicationId
          required: false
          schema:
            type: string
          style: form
        - description: Identifier of producing application.
          explode: true
          in: query
          name: producingApplicationId
          required: false
          schema:
            type: string
          style: form
        - description: The priority of the Performance Job.
          explode: true
          in: query
          name: jobPriority
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by the client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: >-
            Requested number of resources to be provided in response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceJob_Find'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find Performance Job objects.
      tags:
        - performanceJob
    post:
      description: >-
        A request initiated by the Buyer/Client to create a Performance Job
        in the Seller/Server system to indicate performance monitoring
        objectives.
      operationId: createPerformanceJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PerformanceJob_Create'
        description: The Performance Job to be created.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PerformanceJob'
          description: >-
            'Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Creates a Performance Job.
      tags:
        - performanceJob
  '/performanceJob/{id}':
    get:
      description: >-
        The Buyer/Client requests detailed information about a single
        Performance Job based on the Job Identifier.
      operationId: retrievePerformanceJob
      parameters:
        - description: Identifier of the Performance Job.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PerformanceJob'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a Performance Job by ID.
      tags:
        - performanceJob
  '/performanceJob/{id}/resume':
    post:
      description: This operation sends a resumption request.
      operationId: resumePerformanceJob
      parameters:
        - description: Identifier of the PerformanceJob.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Resumed
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description:
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Resumes a Performance Job.
      tags:
        - resumePerformanceJob
  '/performanceJob/{id}/suspend':
    post:
      description: This operation sends a suspension request.
      operationId: suspendPerformanceJob
      parameters:
        - description: Identifier of the PerformanceJob.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Suspended
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description:
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Suspends a Performance Job.
      tags:
        - suspendPerformanceJob
  /cancelPerformanceJob:
    get:
      description: >-
        The Buyer/Client requests a list of Cancel Performance Monitoring Job
        based on a set of filter criteria.
      operationId: listCancelPerformanceJob
      parameters:
        - description: >-
            Identifer of Performance Job that is a subject of
            CancelPerformanceJob.
          explode: true
          in: query
          name: performanceJobId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            State of CancelPerformanceJob. See `PerformanceJobProcessStateType`
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            type: string
            enum:
              - acknowledged
              - completed
              - inProgress
              - rejected
          style: form
        - description: >-
            Date when the CancelPerformanceJob was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Date when the CancelPerformanceJob was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
          style: form
        - description: >-
            Requested number of items to be provided in response requested by
            client.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CancelPerformanceJob_Find'
          description: Success
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Lists or finds CancelPerformanceJob objects.
      tags:
        - cancelPerformanceJob
    post:
      description: >-
        A request initiated by the Buyer/Client to cancel 
        a Performance Monitoring Job in the Seller/Server system.
      operationId: createCancelPerformanceJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CancelPerformanceJob_Create'
        description: The CancelPerformanceJob to be created.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CancelPerformanceJob'
          description: Created
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error422'
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      tags:
        - cancelPerformanceJob
  /cancelPerformanceJob/{id}:
    get:
      description: >-
        The Buyer/Client requests detailed information about a single 
        Cancel Performance Monitoring Job based on the 
        Cancel Performance Monitoring Job Identifier.
      operationId: retrieveCancelPerformanceJob
      parameters:
        - description: Identifier of the CancelPerformanceJob.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CancelPerformanceJob'
          description: Success
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a CancelPerformanceJob by ID.
      tags:
        - cancelPerformanceJob
  /modifyPerformanceJob:
    get:
      description: >-
        The Buyer/Client requests a list of Modify Performance Monitoring Job
        based on a set of filter criteria.
      operationId: listModifyPerformanceJob
      parameters:
        - description: >-
            Identifer of Performance Job that is a subject of
            ModifyPerformanceJob.
          explode: true
          in: query
          name: performanceJobId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            State of ModifyPerformanceJob See `PerformanceJobProcessStateType`
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            type: string
            enum:
              - acknowledged
              - completed
              - inProgress
              - rejected
          style: form
        - description: >-
            Date when the ModifyPerformanceJob was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Date when the ModifyPerformanceJob was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
          style: form
        - description: >-
            Requested number of items to be provided in response requested by
            client.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModifyPerformanceJob_Find'
          description: Success
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Lists or finds ModifyPerformanceJob objects.
      tags:
        - modifyPerformanceJob
    post:
      description: >-
        A request initiated by the Buyer/Client to modify
        a Performance Monitoring Job in the Seller/Server system.
      operationId: createModifyPerformanceJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ModifyPerformanceJob_Create'
        description: The ModifyPerformanceJob to be created.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ModifyPerformanceJob'
          description: Created
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error422'
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      tags:
        - modifyPerformanceJob
  /modifyPerformanceJob/{id}:
    get:
      description: >-
        The Buyer/Client requests detailed information about a single 
        Modify Performance Monitoring Job based on the 
        Modify Performance Monitoring Job Identifier.
      operationId: retrieveModifyPerformanceJob
      parameters:
        - description: Identifier of the ModifyPerformanceJob.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ModifyPerformanceJob'
          description: Success
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a ModifyPerformanceJob by ID.
      tags:
        - modifyPerformanceJob
  /performanceJobComplexQuery:
    post:
      description: >-
        A request initiated by the Buyer/Client to create 
        a Performance Monitoring Job Complex Query in the Seller/Server system.
      operationId: createPerformanceJobComplexQuery
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PerformanceJobComplexQuery_Create'
        description: The PerformanceJobComplexQuery to be created.
        required: true
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceJobComplexQuery'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Creates a PerformanceJobComplexQuery.
      tags:
        - performanceJobComplexQuery
  /performanceProfile:
    get:
      description: >-
        The Buyer/Client requests a list of PM Profiles based
        on a set of filter criteria. The Seller/Server returns a summarized
        list of PM Profiles. For each PM Profile returned, the Seller/Server
        also provides a Performance Profile Identifier that uniquely
        identifiers this PM Profile within the Seller/Server. The order of the
        elements returned to the Buyer is defined by the Seller/Server (e.g.
        natural order) and does not change between the pages.
      operationId: listPerformanceProfile
      parameters:
        - description: >-
            State of the Performance Profile. See `PerformanceProfileStateType`
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            type: string
            enum:
              - active
              - deleted
          style: form
        - description: Date when the profile was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Date when the profile was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Type of the Performance Job.
          explode: true
          in: query
          name: jobType
          required: false
          schema:
            $ref: '#/components/schemas/JobType'
          style: form
        - description: Sampling rate of the collection of measurements.
          explode: true
          in: query
          name: granularity
          required: false
          schema:
            $ref: '#/components/schemas/Interval'
          style: form
        - description: >-
            Definition of time period during which report will be active 
            and collect measurements.
          explode: true
          in: query
          name: reportingPeriod
          required: false
          schema:
            $ref: '#/components/schemas/Interval'
          style: form
        - description: The priority of the Performance Job.
          explode: true
          in: query
          name: jobPriority
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by the client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: >-
            Requested number of resources to be provided in response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceProfile_Find'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find Performance Profile objects.
      tags:
        - performanceProfile
    post:
      description: >-
        A request initiated by the Buyer/Client to create a Performance
        Profile in the Seller/Server system.
      operationId: createPerformanceProfile
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PerformanceProfile_Create'
        description: The Performance Profile to be created.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PerformanceProfile'
          description: >-
            'Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Creates a Performance Profile.
      tags:
        - performanceProfile
  '/performanceProfile/{id}':
    delete:
      description: >-
        The Buyer/Client requests deletion of Performance Profile
        by specifying Profile Identifier.
      operationId: deletePerformanceProfile
      parameters:
        - description: Identifier of the Performance Profile.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '204':
          description: Deleted
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        '501':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      summary: Deletes a Performance Profile.
      tags:
        - performanceProfileOperations
    get:
      description: >-
        The Buyer/Client requests detailed information about
        a single Performance Profile based on the Profile Identifier.
      operationId: retrievePerformanceProfile
      parameters:
        - description: Identifier of the Performance Profile.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PerformanceProfile'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a Performance Profile by ID.
      tags:
        - performanceProfile
    patch:
      description: >-
        A request initiated by the Buyer/Client to modify 
        a Performance Profile in the Seller/Server system 
        based on a Profile Identifier.
      operationId: modifyPerformanceProfile
      parameters:
        - description: Identifier of the Performance Profile.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PerformanceProfile_Update'
        description: The Performance Profile to be updated.
        required: true
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PerformanceProfile'
          description: >-
            'Updated (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '409':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error409'
          description: Conflict
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        '501':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      summary: Updates partially a Performance Profile.
      tags:
        - performanceProfileOperations
  /performanceReport:
    get:
      description: >-
        The Buyer/Client requests a list of PM Reports based on a set of filter
        criteria. The Seller/Server returns a summarized list of PM Reports.
        For each PM Report returned, the Seller/Server also provides a 
        Performance Report Identifier that uniquely identifiers this PM Report
        within the Seller/Server. The order of the elements returned to the 
        Buyer/Client is defined by the Seller/Server (e.g. natural order) and
        does not change between the pages.
      operationId: listPerformanceReport
      parameters:
        - description: >-
            Identifier of Performance Job that generated Performance Report.
          explode: true
          in: query
          name: performanceJobId
          required: false
          schema:
            type: string
          style: form
        - description: Identifier of a Service From.
          explode: true
          in: query
          name: serviceIdFrom
          required: false
          schema:
            type: string
          style: form
        - description: Identifier of a Service To.
          explode: true
          in: query
          name: serviceIdTo
          required: false
          schema:
            type: string
          style: form
        - description: Identifier of a Entity.
          explode: true
          in: query
          name: entityId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            State of the Performance Report. See `PerformanceReportStateType`
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            type: string
            enum:
              - acknowledged
              - completed
              - failed
              - inProgress
              - rejected
          style: form
        - description: Date when the report was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Date when the report was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Start date of reporting timeframe - greater than.
          explode: true
          in: query
          name: reportingTimeframe.startDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Start date of reporting timeframe - lower than.
          explode: true
          in: query
          name: reportingTimeframe.startDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: End date of reporting timeframe - greater than.
          explode: true
          in: query
          name: reportingTimeframe.endDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: End date of reporting timeframe - lower than.
          explode: true
          in: query
          name: reportingTimeframe.endDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Sampling rate of the collection of measurements.
          explode: true
          in: query
          name: granularity
          required: false
          schema:
            $ref: '#/components/schemas/Interval'
          style: form
        - description: Type of the Performance Job that generated the report.
          explode: true
          in: query
          name: jobType
          required: false
          schema:
            $ref: '#/components/schemas/JobType'
          style: form
        - description: Format of report output.
          explode: true
          in: query
          name: outputFormat
          required: false
          schema:
            $ref: '#/components/schemas/OutputFormat'
          style: form
        - description: Type of providing report results.
          explode: true
          in: query
          name: resultFormat
          required: false
          schema:
            $ref: '#/components/schemas/ResultFormat'
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by the client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: >-
            Requested number of resources to be provided in response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceReport_Find'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find Performance Report objects.
      tags:
        - performanceReport
    post:
      description: >-
        A request initiated by the Buyer/Client to create an ad-hoc
        Performance Report based on existing performance data in the 
        Seller/Server system.
      operationId: createPerformanceReport
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PerformanceReport_Create'
        description: The Performance Report to be created.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PerformanceReport'
          description: >-
            'Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Creates a Performance Report.
      tags:
        - performanceReport
  '/performanceReport/{id}':
    get:
      description: >-
        The Buyer/Client requests detailed information about a single 
        Performance Report based on the Report Identifier.
      operationId: retrievePerformanceReport
      parameters:
        - description: >-
            Identifier of the Performance Report to be retrieved.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PerformanceReport'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a Performance Report by ID.
      tags:
        - performanceReport
  /performanceReportComplexQuery:
    post:
      description: >-
        A request initiated by the Buyer/Client to create 
        a Performance Monitoring Report Complex Query 
        in the Seller/Server system.
      operationId: createPerformanceReportComplexQuery
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PerformanceReportComplexQuery_Create'
        description: The PerformanceReportComplexQuery to be created.
        required: true
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceReportComplexQuery'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Creates a PerformanceReportComplexQuery.
      tags:
        - performanceReportComplexQuery
  /trackingRecord:
    get:
      description: >-
        The Buyer/Client requests a list of Tracking Records based on a set of
        filter criteria. The Seller/Server returns a summarized list of
        Tracking Records. Tracking Record allows for tracking of modifications
        performed on a Performance Job, Profile or Report.
      operationId: listTrackingRecord
      parameters:
        - description: >-
            Identifier of Performance Job, Performance Profile or
            Performance Report.
          explode: true
          in: query
          name: relatedObjectId
          required: false
          schema:
            type: string
          style: form
        - description: Date when the record was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Date when the record was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            User that executed the action which created a Tracking Record.
          explode: true
          in: query
          name: user
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by the client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: >-
            Requested number of resources to be provided in response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingRecord_Find'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find Tracking Record objects.
      tags:
        - trackingRecord
  '/trackingRecord/{id}':
    get:
      description: >-
        The Buyer/Client requests detailed information about a single 
        Tracking Record based on the Tracking Record Identifier.
      operationId: retrieveTrackingRecord
      parameters:
        - description: Identifier of the Tracking Record.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TrackingRecord'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a Tracking Record by ID.
      tags:
        - trackingRecord
  /hub:
    post:
      description: >-
        The Buyer/Client requests to subscribe to Performance Monitoring 
        Profile, Performance Monitoring Job and/or Performance Monitoring 
        Report Notifications.
      operationId: registerListener
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        description: >-
          Data containing the callback endpoint to deliver the information.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Subscribed
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        '501':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      summary: Register a listener
      tags:
        - events subscription
  '/hub/{id}':
    delete:
      description: >-
        The Buyer/Client requests to unsubscribe from 
        Performance Monitoring Profile, Performance Monitoring Job or 
        Performance Monitoring Report Notifications.
      operationId: unregisterListener
      parameters:
        - description: The id of the registered listener.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '204':
          description: Deleted
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        '501':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      summary: Unregister a listener.
      tags:
        - events subscription
    get:
      description: >-
        The Buyer/Client requests detailed information about 
        a single Notification Hub based on the Hub Identifier.
      operationId: retrieveHub
      parameters:
        - description: Identifier of the Hub.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Success
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        '501':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      summary: Retrieves a Hub by ID.
      tags:
        - events subscription
components:
  schemas:
    AttachmentURL:
      type: object
      description: The URL pointing to an Attachment for download.
      properties:
        retentionPeriod:
          type: string
          format: date-time
          description: A date until which the file will be retained.
        url:
          description: The URL pointing to an Attachment for download.
          format: uri
          type: string
      required:
        - url
    CancelPerformanceJob:
      allOf:
        - $ref: '#/components/schemas/CancelPerformanceJob_Common'
        - type: object
          properties:
            cancellationDeniedReason:
              type: string
              description: >-
                If the Cancel Performance Job request is denied by the 
                Seller/Server, the Seller/Server provides a reason to the
                Buyer/Client using this attribute.
            creationDate:
              type: string
              format: date-time
              description: Date when the Cancel Performance Job was created.
            href:
              type: string
              description: Hyperlink to the Cancel Performance Job entity.
            id:
              type: string
              description: >-
                Unique identifier for the Cancel Performance Job that is generated
                by the Seller/Server when the Cancel Performance Job request 
                `state` is set to `acknowledged`.
            performanceJob:
              $ref: '#/components/schemas/PerformanceJobRef'
              description: A reference to a Performance Job resource.
            state:
              $ref: '#/components/schemas/PerformanceJobProcessStateType'
              description: |-
                The state of the process related to the Performance Job.
          required:
            - creationDate
            - id
            - performanceJob
            - state
      description: Request for cancellation of an existing Performance Job.
    CancelPerformanceJob_Common:
      type: object
      description: Request for cancellation of an existing Performance Job.
      properties:
        cancellationReason:
          type: string
          description: >-
            An optional attribute that allows the Buyer/Client to provide
            additional detail to the Seller/Server on the reason for cancelling
            Performance Job.
    CancelPerformanceJob_Create:
      allOf:
      - $ref: '#/components/schemas/CancelPerformanceJob_Common'
      - type: object
        properties:
          performanceJobId: 
            type: string
            description: >-
              Identifer of Performance Monitoring Job that is a subject of
              CancelPerformanceJob.
        required:
          - performanceJobId
      description: Request for cancellation of an existing Performance Job.
    CancelPerformanceJob_Find:
      type: object
      description: >-
        This class represents a single list item for the response of 
        `listCancelPerformanceJob`.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the Cancel Performance Job was created.
        id:
          type: string
          description: >-
            Unique identifier for the Cancel Performance Job that is generated
            by the Seller/Server when the Cancel Performance Job request 
            `state` is set to `acknowledged`.
        performanceJob:
          $ref: '#/components/schemas/PerformanceJobRef'
          description: A reference to a Performance Job resource.
        state:
          $ref: '#/components/schemas/PerformanceJobProcessStateType'
          description: |-
            The state of the process related to the Performance Job.
      required:
        - creationDate
        - id
        - performanceJob
        - state
    EntityId:
      allOf:
        - $ref: '#/components/schemas/MonitoredObjectId'
        - type: object
          properties:
            entityId:
              type: string
              description: Identifier of an Entity.
          required:
            - entityId
      description: >-
        Identifier of an Entity.
    Error:
      type: object
      description: >-
        Standard Class used to describe API response error Not intended to be
        used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      properties:
        message:
          type: string
          description: >-
            Text that provides more details and corrective actions related to
            the error. This can be shown to a client user.
        reason:
          type: string
          description: >-
            Text that explains the reason for the error. This can be shown to a
            client user.
          maxLength: 255
        referenceError:
          type: string
          description: URL pointing to documentation describing the error.
          format: uri
      required:
        - reason
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error400Code'
          required:
            - code
      description: >-
        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
    Error400Code:
      type: string
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string 
          parameter
        - missingQueryValue: The URI is missing a required query-string 
          parameter value
        - invalidQuery: The query section of the URI is invalid
        - invalidBody: The request has an invalid body.
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error401Code'
          required:
            - code
      description: >-
        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided
        - invalidCredentials: Provided credentials are invalid or expired.
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error403Code'
          required:
            - code
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refused to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: >-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users.
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error404:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - notFound: A current representation of the target resource 
                  not found.
              enum:
                - notFound
          required:
            - code
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error409:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                The following error code:
                - conflict: The client has provided a value whose semantics are
                not appropriate for the property.
              enum:
                - conflict
          required:
            - code
      description: >-
        Conflict (https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.8)
    Error422:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error422Code'
            propertyPath:
              type: string
              description: >-
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
          required:
            - code
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      type: string
      description: |-
        One of the following error codes:
        - missingProperty: The property that was expected is not present in the
          payload
        - invalidValue: The property has an incorrect value
        - invalidFormat: The property value does not comply with the expected 
          value format
        - referenceNotFound: The object referenced by the property cannot be 
          identified in the target system
        - unexpectedProperty: Additional, not expected property has been 
          provided
        - tooLargeDataset: The requested entity will produce too much data
        - tooManyRecords: The number of records to be provided in the response
          exceeds the threshold
        - tooManyRequests: The number of simultaneous requests from one API 
          client exceeds the threshold
        - performanceProfileInUse: Requested Performance Profile is being used
          by a Performance Job
        - otherIssue: Other problem was identified (detailed information
          provided in a reason).
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooLargeDataset
        - tooManyRecords
        - tooManyRequests
        - performanceProfileInUse
        - otherIssue
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                The following error code:
                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
          required:
            - code
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Error501:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - notImplemented: Method not supported by the server.
              enum:
                - notImplemented
          required:
            - code
      description: >-
        Not Implemented. Used in case Seller is not supporting an optional
        operation. (https://tools.ietf.org/html/rfc7231#section-6.6.2)
    EventSubscription:
      type: object
      description: >-
        This resource is used to respond to notification subscriptions.
      properties:
        callback:
          type: string
          description: >-
            The value provided by the `EventSubscriptionInput` during
            notification registration.
        id:
          type: string
          description: >-
            An identifier of this Event Subscription assigned when a resource
            is created.
        query:
          type: string
          description: >-
            The value provided by the `EventSubscriptionInput` during
            notification registration.
      required:
        - callback
        - id
    EventSubscriptionInput:
      type: object
      description: This class is used to register for Notifications.
      properties:
        callback:
          type: string
          description: >-
            This callback value must be set to the *host* property from Performance
            Notification API (performanceNotification.api.yaml). This
            property is appended with the base path and notification resource
            path specified in that API to construct a URL to which
            notification is sent. E.g. for 'callback': 
            "https://buyer.co/listenerEndpoint", the performance job state
            change event notification will be sent to
            `https://buyer.co/listenerEndpoint/mefApi/allegro/performanceMonitoring/v2/listener/performanceJobStateChangeEvent`.
        query:
          type: string
          description: >-
            This attribute is used to define which type of events to
            register to. Example: 'query':'eventType = 
            performanceReportStateChangeEvent'. To subscribe for more than one
            event type, put the values separated by a comma:
            `eventType=performanceReportStateChangeEvent,performanceJobCreateEvent`.
            The possible values are enumerated by Event type enums in
            performanceNotification.api.yaml. An empty query is treated as
            specifying no filters - ending in subscription for all event types.
      required:
        - callback
    HourRange:
      type: object
      description: Defines start and end date.
      properties:
        start:
          type: string
          format: date-time
          description: Start date
        end:
          type: string
          format: date-time
          description: End date
    Interval:
      type: string
      description: Enumeration of applicable time intervals.
      enum:
        - 10 milliseconds
        - 100 milliseconds
        - 1 second
        - 10 seconds
        - 1 minute
        - 5 minutes
        - 15 minutes
        - 30 minutes
        - 1 hour
        - 24 hours
        - 1 month
        - 1 year
    JobType:
      type: string
      description: The type of PM Job.
      enum:
        - proactive
        - on-demand
        - passive
    MeasurementTime:
      type: object
      description: >-
        Timeframe boundary for collected data. Provide measurementStartDate and
        measurementEndDate or measurementStartDate and measurementInterval.
      properties:
        measurementStartDate:
          type: string
          format: date-time
          description: >-
            Start date of the period to which collected data
            points belong.
        measurementEndDate:
          type: string
          format: date-time
          description: >-
            End date of the period to which collected data
            points belong.
        measurementInterval:
          $ref: '#/components/schemas/Interval'
          description: Length of the measurement interval.
    ModifyPerformanceJob:
      allOf:
        - $ref: '#/components/schemas/ModifyPerformanceJob_Common'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date when the Modify Performance Job was created.
            href:
              type: string
              description: Hyperlink to the Modify Performance Job entity.
            id:
              type: string
              description: >-
                Unique identifier for the Modify Performance Job that is generated
                by the Seller/Server when the Modify Performance Job request 
                `state` is set to `acknowledged`.
            modificationDeniedReason:
              type: string
              description: >-
                If the Modify Performance Job request is denied by the 
                Seller/Server, the Seller/Server provides a reason to the
                Buyer/Client using this attribute.
            performanceJob:
              $ref: '#/components/schemas/PerformanceJobRef'
              description: A reference to a Performance Job resource.
            state:
              $ref: '#/components/schemas/PerformanceJobProcessStateType'
              description: |-
                The state of the process related to the Performance Job.
          required:
            - creationDate
            - id
            - performanceJob
            - state
      description: Request for modification of an existing Performance Job.
    ModifyPerformanceJob_Common:
      type: object
      description: Request for modification of an existing Performance Job.
      properties:
        buyerJobId:
          type: string
          description: >-
            Identifier of the job understood and assigned by the Buyer/Client.
        consumingApplicationId:
          type: string
          description: Identifier of consuming application.
        description:
          type: string
          description: A free-text description of the Performance Job.
        modificationReason:
          type: string
          description: >-
            An optional attribute that allows the Buyer/Client to provide
            additional detail to the Seller/Server on the reason for modifying
            Performance Job.
        performanceProfile:
          $ref: '#/components/schemas/ModifyPerformanceJob_PerformanceProfileValue'
          description: >-
            Direct assignment of values defined by PerformanceProfile type to 
            PerformanceJob object. Necessary when PerformanceJob is created
            without reference to PerformanceProfile.
        producingApplicationId:
          type: string
          description: Identifier of producing application.
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
          description: The schedule definition for running jobs.
        servicePayloadSpecificAttributes:
          $ref: '#/components/schemas/ServicePayloadSpecificAttributes'
          description: >-
            ServicePayloadSpecificAttributes is used as an extension point for 
            MEF-specific service performance monitoring configuration. 
    ModifyPerformanceJob_Create:
      allOf:
      - $ref: '#/components/schemas/ModifyPerformanceJob_Common'
      - type: object
        properties:
          performanceJobId:
            type: string
            description: >-
              Identifer of Performance Monitoring Job that is a subject of
              ModifyPerformanceJob.
        required:
        - performanceJobId
      description: Request for modification of an existing Performance Job.
    ModifyPerformanceJob_Find:
      type: object
      description: >-
        This class represents a single list item for the response of 
        `listModifyPerformanceJob`.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the Modify Performance Job was created.
        id:
          type: string
          description: >-
            Unique identifier for the Modify Performance Job that is generated
            by the Seller/Server when the Modify Performance Job request
            `state` is set to `acknowledged`.
        performanceJob:
          $ref: '#/components/schemas/PerformanceJobRef'
          description: A reference to a Performance Job resource.
        state:
          $ref: '#/components/schemas/PerformanceJobProcessStateType'
          description: |-
            The state of the process related to the Performance Job.
      required:
        - creationDate
        - id
        - performanceJob
        - state
    ModifyPerformanceJob_PerformanceProfileValue:
      type: object
      description: >-
        Direct assignment of values defined by PerformanceProfile type to 
        PerformanceJob object. This class is used for Performance Job 
        modification to update attributes defined by PerformanceProfile.
      properties:
        granularity:
          $ref: '#/components/schemas/Interval'
          description: >-
            Sampling rate of the collection or production of performance
            indicators.
        jobPriority:
          type: integer
          default: 5
          description: >-
            The priority of the Performance Job. The way the management
            application will use the Job priority to schedule Job execution is
            application-specific and out the scope.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: >-
            List of possible output formats for the Performance Report.
        reportingPeriod:
          $ref: '#/components/schemas/Interval'
          description: Defines the interval for the report generation.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Performance Report to the Buyer/Client.
    MonitoredObjectId: 
      type: object
      description: >-
        Defines the reference to object which is a subject of performance
        monitoring.
      discriminator:
        mapping:
          Entity: '#/components/schemas/EntityId'
          Service: '#/components/schemas/ServiceId'
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: >-
            This field is used as a discriminator to differentiate if monitored
            object is an Entity or a Service.
          enum:
            - Entity
            - Service
      required:
        - '@type'
    OutputFormat:
      type: string
      description: >-
        List of possible output formats for the Performance Report.
      enum:
        - json
        - xml
        - avro
        - csv
    PerformanceJob:
      allOf:
        - $ref: '#/components/schemas/PerformanceJob_Common'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date when the Performance Job was created.
            href:
              type: string
              format: uri
              description: Hyperlink reference
            id:
              type: string
              description: Unique identifier
            lastModifiedDate:
              type: string
              format: date-time
              description: Date when the job was last modified.
            rejectionReason:
              type: string
              description: Reason in case creation request was rejected.
            state:
              $ref: '#/components/schemas/PerformanceJobStateType'
              description: |-
                The state of the Performance Monitoring Job.
          required:
            - creationDate
            - id
            - state
      description: >-
        A Performance Monitoring Job specifies the performance monitoring
        objectives specific to each subject of monitoring which could be an
        ordered pair (i.e., two UNIs) or an entity (i.e., port).
    PerformanceJobComplexQuery:
      type: object
      description: >-
        Performance Job Complex Query entity is used to perform 
        searches on Performance Job entities, including clauses
        based on ScheduleDefinition and ServicePayloadSpecificAttributes.
      properties:
        buyerJobId:
          type: string
          description: >-
            Identifier of the job understood and assigned by the Buyer/Client.
        consumingApplicationId:
          type: string
          description: Identifier of consuming application.
        creationDate:
          type: string
          format: date-time
          description: Date when the Performance Job was created.
        description:
          type: string
          description: >- 
            A free-text description of the Performance Monitoring Job.
        lastModifiedDate:
          type: string
          format: date-time
          description: Date when the report was last modified.
        monitoredObjectId:
          $ref: '#/components/schemas/MonitoredObjectId'
          description: >-
            Defines the reference to object which is a subject of performance
            monitoring.
        performanceJob:
          $ref: '#/components/schemas/PerformanceJobRef'
          description: A reference to a Performance Job resource.
        performanceProfile:
          $ref: '#/components/schemas/PerformanceProfileRefOrValue'
          description: >-
            Defines the reference to Performance Monitoring Profile or defines
            values from PerformanceProfile type.
        producingApplicationId:
          type: string
          description: Identifier of producing application
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
          description: The schedule definition for running jobs.
        servicePayloadSpecificAttributes:
          $ref: '#/components/schemas/ServicePayloadSpecificAttributes'
          description: >-
            ServicePayloadSpecificAttributes is used as an extension point for 
            MEF-specific service performance monitoring configuration. 
        state:
          $ref: '#/components/schemas/PerformanceJobStateType'
          description: |-
            The state of the Performance Monitoring Job.
      required:
        - creationDate
        - monitoredObjectId
        - performanceJob
        - performanceProfile
        - scheduleDefinition
        - servicePayloadSpecificAttributes
        - state
    PerformanceJobComplexQuery_Create:
      type: object
      description: >-
        Performance Job Complex Query entity is used to perform 
        searches on Performance Job entities, including clauses
        based on ScheduleDefinition and ServicePayloadSpecificAttributes.
      properties:
        buyerJobId:
          type: string
          description: >-
            Identifier of the job understood and assigned by the Buyer/Client.
        consumingApplicationId:
          type: string
          description: Identifier of consuming application.
        creationDate.gt:
          type: string
          format: date-time
          description: Date when the Performance Job was created - greater than.
        creationDate.lt:
          type: string
          format: date-time
          description: Date when the Performance Job was created - lower than.
        granularity:
          $ref: '#/components/schemas/Interval'
          description: >-
            Sampling rate of the collection or production of performance
            indicators.
        jobPriority:
          type: integer
          default: 5
          description: >-
            The priority of the Performance Job. The way the management
            application will use the Job priority to schedule Job execution
            is application-specific and out the scope.
        jobType:
          $ref: '#/components/schemas/JobType'
          description: The type of PM Job.
        lastModifiedDate.gt:
          type: string
          format: date-time
          description: Date when the report was last modified - greater than.
        lastModifiedDate.lt:
          type: string
          format: date-time
          description: Date when the report was last modified - lower than.
        monitoredObjectId:
          $ref: '#/components/schemas/MonitoredObjectId'
          description: >-
            Defines the reference to object which is a subject of performance
            monitoring.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: >-
            List of possible output formats for the Performance Report.
        performanceProfileId:
          type: string
          description: Identifier of the referenced Performance Profile.
        producingApplicationId:
          type: string
          description: Identifier of producing application.
        reportingPeriod:
          $ref: '#/components/schemas/Interval'
          description: Defines the interval for the report generation.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Performance Report to the Buyer/Client.
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
          description: The schedule definition for running jobs.
        servicePayloadSpecificAttributes:
          $ref: '#/components/schemas/ServicePayloadSpecificAttributes'
          description: >-
            ServicePayloadSpecificAttributes is used as an extension point for 
            MEF-specific service performance monitoring configuration. 
        state:
          $ref: '#/components/schemas/PerformanceJobStateType'
          description: |-
            The state of the Performance Monitoring Job.
    PerformanceJobProcessStateType:
      type: string
      description: |-
        The state of the process related to the Performance Job.

        | state          | MEF 133 name | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
        | -------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `acknowledged` | Acknowledged | The Cancel/Modify Performance Monitoring Job request has been received by the Seller/Server and has passed basic validation. Performance Monitoring Job Process Identifier is assigned in the Acknowledged state. The request remains Acknowledged until all validations as applicable are completed. If the attributes are validated, the request moves to the In-Progress state. If not all attributes are validated, the request moves to the Rejected state. |
        | `completed`    | Completed    | The Cancel/Modify Performance Monitoring Job request has been completed by the Seller/Server.                                                                                                                                                                                                                                                                                                                                                                    |
        | `inProgress`   | In-Progress  | The Cancel/Modify Performance Monitoring Job request has been validated and accepted by the Seller/Server and is in-progress.                                                                                                                                                                                                                                                                                                                                    |
        | `rejected`     | Rejected     | The Cancel/Modify Performance Monitoring Job request has failed validation and has been declined by the Seller/Server.                                                                                                                                                                                                                                                                                                                                           |

      enum:
        - acknowledged
        - completed
        - inProgress
        - rejected
    PerformanceJobRef:
      allOf:
        - $ref: '#/components/schemas/PerformanceJobRefOrValue'
        - type: object
          properties:
            performanceJobHref:
              type: string
              description: Hyperlink to the referenced Performance Job.
            performanceJobId:
              type: string
              description: Identifier of the referenced Performance Job.
          required:
            - performanceJobId
      description: A reference to a Performance Job resource.
    PerformanceJobRefOrValue:
      type: object
      description: >-
        Defines the reference to Performance Monitoring Job or defines values
        from PerformanceJob type.
      discriminator:
        mapping:
          PerformanceJobRef: '#/components/schemas/PerformanceJobRef'
          PerformanceJobValue: '#/components/schemas/PerformanceJobValue'
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: >-
            This field is used as a discriminator to differentiate if an object
            relates directly to the Performance Job entity or defines values from
            the PerformanceJob type.
      required:
        - '@type'
    PerformanceJobStateType:
      type: string
      description: |-
        The state of the Performance Monitoring Job.

        | state                  | MEF 133 name          | Description|
        | ---------------------- | --------------------- ||
        | `acknowledged`         | Acknowledged          | A Create Performance Monitoring Job request has been received by the Seller/Server and has passed basic validation. Performance Monitoring Job Identifier is assigned in the Acknowledged state. The request remains Acknowledged until all validations as applicable are completed. If the attributes are validated the request determines if the start time is immediate or scheduled. If immediate, the Performance Monitoring Job moves to the In-progress state. If scheduled, the Performance Monitoring Job moves to the Scheduled state. If not all attributes are validated, the request moves to the Rejected state.                                                   |
        | `cancelled`            | Cancelled             | A Performance Monitoring Job that was In-Progress, Suspended, or Scheduled is cancelled|
        | `completed`            | Completed             | A non-recurring Performance Monitoring Job finished execution|
        | `inProgress`           | In-Progress           | A Performance Monitoring Job is running. Upon completion of the Job, a determination if the Performance Monitoring Job is a one-time Job or is recurring is performed. If the Performance Monitoring Job is a one-time Job, the state of the Performance Monitoring Job moves to the Completed state. If the Performance Monitoring Job is recurring, the Performance Monitoring Job circles back to determine if it has an immediate start time or a scheduled start time. If a Suspend Performance Monitoring Job request is accepted, the Job moves to the Suspended state. If a Cancel Performance Monitoring Job request is accepted, the Job moves to the Cancelled state. |
        | `pending`              | Pending               | A Modify Performance Monitoring Job request has been accepted by the Seller/Server. The Performance Monitoring Job remains Pending while updates to the Job are completed. Once updates are complete, the Job returns to the Scheduled or In-Progress status depending on the schedule definition.                                                                                                                                                                                                                                                                                                                                                                               |
        | `pendingCancel`        | Pending Cancel        | A Cancel Performance Monitoring Job request has been accepted by the Seller/Server. The Performance Monitoring Job remains Pending Cancel while resources used by the Job are being released. Once updates are complete, the Job moves to the Cancelled status.                                                                                                                                                                                                                                                                                                                                                                                                                  |
        | `rejected`             | Rejected              | A create Performance Monitoring Job request fails validation and is rejected with error indications by the Seller/Server|
        | `resourcesUnavailable` | Resources Unavailable | A Performance Monitoring Job cannot be allocated necessary resources when moving to execution (In-Progress state|
        | `scheduled`            | Scheduled             | A Performance Monitoring Job is created that does not have an immediate start time. The Performance Monitoring Job stays Scheduled until the start time is reached. The Performance Monitoring Job then moves to In-Progress. If the Cancel Performance Monitoring Job request is accepted, the Job moves to the Cancelled state. If the Modify Performance Monitoring Job request is accepted, the Job moves to the Pending state.                                                                                                                                                                                                                                              |
        | `suspended`            | Suspended             | A Suspend Performance Monitoring Job request is accepted by the Seller/Server. The Job remains Suspended until a Resume Performance Monitoring Job request is accepted by the Seller/Server at which time the Job returns to the In-Progress state. If the Cancel Performance Monitoring Job request is accepted, the Job moves to the Cancelled state. If the Modify Performance Monitoring Job request is accepted, the Job moves to the Pending state.                                                                                                                                                                                                                        |
      enum:
        - acknowledged
        - cancelled
        - completed
        - inProgress
        - pending
        - pendingCancel
        - rejected
        - resourcesUnavailable
        - scheduled
        - suspended
    PerformanceJobValue:
      allOf:
        - $ref: '#/components/schemas/PerformanceJobRefOrValue'
        - type: object
          properties:
            consumingApplicationId:
              type: string
              description: Identifier of consuming application.
            granularity:
              $ref: '#/components/schemas/Interval'
              description: >-
                Sampling rate of the collection or production of performance
                indicators.
            monitoredObjectId:
              $ref: '#/components/schemas/MonitoredObjectId'
              description: >-
                Defines the reference to object which is a subject of performance
                monitoring.
            outputFormat:
              $ref: '#/components/schemas/OutputFormat'
              description: >-
                List of possible output formats for the Performance Report.
            producingApplicationId:
              type: string
              description: Identifier of producing application.
            resultFormat:
              $ref: '#/components/schemas/ResultFormat'
              description: >-
                List of possible result formats that define how Seller/Server will
                deliver Performance Report to the Buyer/Client.
            servicePayloadSpecificAttributes:
              $ref: '#/components/schemas/ServicePayloadSpecificAttributes'
              description: >-
                ServicePayloadSpecificAttributes is used as an extension point for 
                MEF-specific service performance monitoring configuration. 
          required:
            - granularity
            - monitoredObjectId
            - outputFormat
            - resultFormat
            - servicePayloadSpecificAttributes
      description: >- 
        Direct assignment of values defined by PerformanceJob type to 
        PerformanceReport object. Necessary when PerformanceReport is not
        created by PerformanceJob.
    PerformanceJob_Common:
      type: object
      description: >-
        A Performance Monitoring Job specifies the performance monitoring
        objectives specific to each subject of monitoring which could be an 
        ordered pair (i.e., two UNIs) or an entity (i.e., port).
      properties:
        buyerJobId:
          type: string
          description: >-
            Identifier of the job understood and assigned by the Buyer/Client.
        consumingApplicationId:
          type: string
          description: Identifier of consuming application.
        description:
          type: string
          description: A free-text description of the Performance Job.
        monitoredObjectId: 
          $ref: '#/components/schemas/MonitoredObjectId'
          description: >-
            Defines the reference to object which is a subject of performance
            monitoring.
        performanceProfile:
          $ref: '#/components/schemas/PerformanceProfileRefOrValue'
          description: >-
            Defines the reference to Performance Monitoring Profile or defines
            values from PerformanceProfile type.
        producingApplicationId:
          type: string
          description: Identifier of producing application.
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
          description: The schedule definition for running jobs.
        servicePayloadSpecificAttributes:
          $ref: '#/components/schemas/ServicePayloadSpecificAttributes'
          description: >-
            ServicePayloadSpecificAttributes is used as an extension point for 
            MEF-specific service performance monitoring configuration. 
      required:
        - monitoredObjectId
        - performanceProfile
        - scheduleDefinition
        - servicePayloadSpecificAttributes
    PerformanceJob_Create:
      allOf:
        - $ref: '#/components/schemas/PerformanceJob_Common'
        - type: object
      description: >-
        A Performance Monitoring Job specifies the performance monitoring
        objectives specific to each subject of monitoring which could be an
        ordered pair (i.e., two UNIs) or an entity (i.e., port).
    PerformanceJob_Find:
      type: object
      description: >-
        This class represents a single list item for the response of
        the `listPerformanceJob` operation.
      properties:
        buyerJobId:
          type: string
          description: >-
            Identifier of the job understood and assigned by the Buyer/Client.
        consumingApplicationId:
          type: string
          description: Identifier of consuming application.
        creationDate:
          type: string
          format: date-time
          description: Date when the job was created.
        description:
          type: string
          description: A free-text description of the Performance Job.
        id:
          type: string
          description: Unique identifier
        monitoredObjectId:
          $ref: '#/components/schemas/MonitoredObjectId'
          description: >-
            Defines the reference to object which is a subject of performance
            monitoring.
        performanceProfile:
          $ref: '#/components/schemas/PerformanceProfileRefOrValue'
          description: >-
            Defines the reference to Performance Monitoring Profile or defines
            values from PerformanceProfile type.
        producingApplicationId:
          type: string
          description: Identifier of producing application.
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
          description: The schedule definition for running jobs.
        state:
          $ref: '#/components/schemas/PerformanceJobStateType'
          description: |-
            The state of the Performance Monitoring Job.
      required:
        - creationDate
        - id
        - monitoredObjectId
        - performanceProfile
        - scheduleDefinition
        - state
    PerformanceProfile:
      allOf:
        - $ref: '#/components/schemas/PerformanceProfile_Common'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date when the Performance Profile was created.
            href:
              type: string
              format: uri
              description: Hyperlink reference
            id:
              type: string
              description: Unique identifier
            lastModifiedDate:
              type: string
              format: date-time
              description: Date when the profile was last modified.
            state:
              $ref: '#/components/schemas/PerformanceProfileStateType'
              description: The state of the Performance Monitoring Profile.
          required:
            - creationDate
            - id
            - state
      description: >-
        A Performance Monitoring Profile specifies the common performance
        configuration that can be reused by multiple Performance Jobs.
    PerformanceProfileRef:
      allOf:
        - $ref: '#/components/schemas/PerformanceProfileRefOrValue'
        - type: object
          properties:
            performanceProfileHref:
              type: string
              description: Hyperlink to the referenced Performance Profile.
            performanceProfileId:
              type: string
              description: Identifier of the referenced Performance Profile.
          required:
            - performanceProfileId
      description: A reference to a Performance Profile resource.
    PerformanceProfileRefOrValue:
      type: object
      description: >-
        Defines the reference to Performance Monitoring Profile or defines
        values from PerformanceProfile type.
      discriminator:
        mapping:
          PerformanceProfileRef: '#/components/schemas/PerformanceProfileRef'
          PerformanceProfileValue: 
            '#/components/schemas/PerformanceProfileValue'
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: >-
            This field is used as a discriminator to differentiate if an object
            relates directly to the Performance Profile entity or defines values
            from the PerformanceProfile type.
      required:
        - '@type'
    PerformanceProfileStateType:
      type: string
      description: |-
        The state of the Performance Monitoring Profile.

        | state          | MEF 133.1 name | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
        | -------------- | -------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `active`       | Active         | A Create Performance Monitoring Profile request has been received by the Server and has passed basic validation. Performance Monitoring Profile has been created by the Seller and allocated a unique `id`. |
        | `deleted`      | Deleted        | A Performance Monitoring Profile that does not have any Performance Monitoring Jobs attached is deleted.                                                                                                    |
      enum:
        - active
        - deleted
    PerformanceProfileValue:
      allOf:
        - $ref: '#/components/schemas/PerformanceProfileRefOrValue'
        - type: object
          properties:
            granularity:
              $ref: '#/components/schemas/Interval'
              description: >-
                Sampling rate of the collection or production of performance
                indicators.
            jobPriority:
              type: integer
              default: 5
              description: >-
                The priority of the Performance Job. The way the management
                application will use the Job priority to schedule Job execution
                is application-specific and out the scope.
            jobType:
              $ref: '#/components/schemas/JobType'
              description: The type of PM Job.
            outputFormat:
              $ref: '#/components/schemas/OutputFormat'
              description: >-
                List of possible output formats for the Performance Report.
            reportingPeriod:
              $ref: '#/components/schemas/Interval'
              description: Defines the interval for the report generation.
            resultFormat:
              $ref: '#/components/schemas/ResultFormat'
              description: >-
                List of possible result formats that define how Seller/Server will
                deliver Performance Report to the Buyer/Client.
          required:
            - granularity
            - jobType
            - outputFormat
            - reportingPeriod
            - resultFormat
      description: >-
        Direct assignment of values defined by PerformanceProfile type to 
        PerformanceJob object. Necessary when PerformanceJob is created without
        reference to PerformanceProfile.
    PerformanceProfile_Common:
      type: object
      description: >-
        A Performance Monitoring Profile specifies the common performance
        configuration that can be reused by multiple Performance Jobs.
      properties:
        description:
          type: string
          description: A free-text description of the Performance Profile.
        granularity:
          $ref: '#/components/schemas/Interval'
          description: >-
            Sampling rate of the collection or production of performance
            indicators.
        jobPriority:
          type: integer
          default: 5
          description: >-
            The priority of the Performance Job. The way the management
            application will use the Job priority to schedule Job execution is
            application-specific and out the scope.
        jobType:
          $ref: '#/components/schemas/JobType'
          description: The type of PM Job.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: >-
            List of possible output formats for the Performance Report.
        reportingPeriod:
          $ref: '#/components/schemas/Interval'
          description: Defines the interval for the report generation.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Performance Report to the Buyer/Client.
      required:
        - granularity
        - jobType
        - outputFormat
        - reportingPeriod
        - resultFormat
    PerformanceProfile_Create:
      allOf:
        - $ref: '#/components/schemas/PerformanceProfile_Common'
        - type: object
      description: >-
        A Performance Monitoring Profile specifies the common performance
        configuration that can be reused by multiple Performance Jobs.
    PerformanceProfile_Find:
      type: object
      description: >-
        This class represents a single list item for the response of
        the `listPerformanceProfile` operation.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the profile was created.
        description:
          type: string
          description: A free-text description of the Performance Profile.
        granularity:
          $ref: '#/components/schemas/Interval'
          description: >-
            Sampling rate of the collection or production of performance
            indicators.
        id:
          type: string
          description: Unique identifier
        jobPriority:
          type: integer
          description: >-
            The priority of the Performance Job. The way the management
            application will use the Job priority to schedule Job execution is
            application-specific and out the scope.
        jobType:
          $ref: '#/components/schemas/JobType'
          description: The type of PM Job.
        reportingPeriod:
          $ref: '#/components/schemas/Interval'
          description: Defines the interval for the report generation.
        state:
          $ref: '#/components/schemas/PerformanceProfileStateType'
          description: The state of the Performance Monitoring Profile.
      required:
        - creationDate
        - granularity
        - id
        - jobType
        - reportingPeriod
        - state
    PerformanceProfile_Update:
      type: object
      description: >-
        A Performance Monitoring Profile specifies the common performance
        configuration that can be reused by multiple Performance Jobs.
      properties:
        description:
          type: string
          description: A free-text description of the Performance Profile.
        granularity:
          $ref: '#/components/schemas/Interval'
          description: >-
            Sampling rate of the collection or production of performance
            indicators.
        jobPriority:
          type: integer
          default: 5
          description: >-
            The priority of the Performance Job. The way the management
            application will use the Job priority to schedule Job execution is
            application-specific and out the scope.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: >-
            List of possible output formats for the Performance Report.
        reportingPeriod:
          $ref: '#/components/schemas/Interval'
          description: Defines the interval for the report generation.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Performance Report to the Buyer/Client.
    PerformanceReport:
      allOf:
        - $ref: '#/components/schemas/PerformanceReport_Common'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date when the Performance Report was created.
            failureReason:
              type: string
              description: Reason in case report generation failed.
            href:
              type: string
              format: uri
              description: Hyperlink reference
            id:
              type: string
              description: Unique identifier
            lastModifiedDate:
              type: string
              format: date-time
              description: Date when the report was last modified.
            reportContent:
              type: array
              items:
                $ref: '#/components/schemas/ReportContentItem'
            reportUrl:
              $ref: '#/components/schemas/AttachmentURL'
              description: >- 
                The URL pointing to an Attachment for download.
            state:
              $ref: '#/components/schemas/PerformanceReportStateType'
              description: |-
                Possible values for the state of a Performance Report.
          required:
            - creationDate
            - id
            - state
      description: >-
        The execution of PM Job results in Performance Measurement
        collections that provide Buyer/Client with performance objective
        results.
    PerformanceReportComplexQuery:
      type: object
      description: >-
        Performance Report Complex Query entity is used to perform 
        searches on Performance Report entities, including clauses
        based on ServicePayloadSpecificAttributes.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the Performance Report was created.
        description:
          type: string
          description: A free-text description of the performance report.
        lastModifiedDate:
          type: string
          format: date-time
          description: Date when the report was last modified.
        performanceJob:
          $ref: '#/components/schemas/PerformanceJobRefOrValue'
          description: >-
            Defines the reference to Performance Monitoring Job or defines values
            from PerformanceJob type.
        performanceReport:
          $ref: '#/components/schemas/PerformanceReportRef'
          description: A reference to a Performance Report resource.
        reportingTimeframe:
          $ref: '#/components/schemas/ReportingTimeframe'
          description: >-
            Specifies the date range between which data points will be included
            in the report.
        state:
          $ref: '#/components/schemas/PerformanceReportStateType'
          description: |-
            Possible values for the state of a Performance Report.
      required:
        - creationDate
        - performanceJob
        - performanceReport
        - reportingTimeframe
        - state
    PerformanceReportComplexQuery_Create:
      type: object
      description: >-
        Performance Report Complex Query entity is used to perform 
        searches on Performance Report entities, including clauses
        based on ServicePayloadSpecificAttributes.
      properties:
        creationDate.gt:
          type: string
          format: date-time
          description: Date when the Performance Report was created - greater than.
        creationDate.lt:
          type: string
          format: date-time
          description: Date when the Performance Report was created - lower than.
        granularity:
          $ref: '#/components/schemas/Interval'
          description: >-
            Sampling rate of the collection or production of performance
            indicators.
        lastModifiedDate.gt:
          type: string
          format: date-time
          description: Date when the report was last modified - greater than.
        lastModifiedDate.lt:
          type: string
          format: date-time
          description: Date when the report was last modified - lower than.
        monitoredObjectId:
          $ref: '#/components/schemas/MonitoredObjectId'
          description: >-
            Defines the reference to object which is a subject of performance
            monitoring.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: >-
            List of possible output formats for the Performance Report.
        performanceJobId:
          type: string
          description: Identifier of the referenced Performance Job.
        reportingTimeframe.startDate.gt:
          type: string
          format: date-time
          description: Start date of reporting timeframe - greater than.
        reportingTimeframe.startDate.lt:
          type: string
          format: date-time
          description: Start date of reporting timeframe - lower than.
        reportingTimeframe.endDate.gt:
          type: string
          format: date-time
          description: End date of reporting timeframe - greater than.
        reportingTimeframe.endDate.lt:
          type: string
          format: date-time
          description: End date of reporting timeframe - lower than.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Performance Report to the Buyer/Client.
        servicePayloadSpecificAttributes:
          $ref: '#/components/schemas/ServicePayloadSpecificAttributes'
          description: >-
            ServicePayloadSpecificAttributes is used as an extension point for 
            MEF-specific service performance monitoring configuration. 
        state:
          $ref: '#/components/schemas/PerformanceReportStateType'
          description: |-
            Possible values for the state of a Performance Report.
    PerformanceReportRef:
      type: object
      description: A reference to a Performance Report resource.
      properties:
        performanceReportHref:
          type: string
          description: Hyperlink to the referenced Performance Report.
        performanceReportId:
          type: string
          description: Identifier of the referenced Performance Report.
      required:
        - performanceReportId
    PerformanceReportStateType:
      type: string
      description: |-
        Possible values for the state of a Performance Report.

        | State        | Description                                                                                                                                                                                                                                                                                                                                                                                                                    |
        | ------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
        | acknowledged | A Performance Report request has been received by Seller/Server and has passed basic validations. Performance Report Identifier is assigned in the Acknowledged state. The report remains Acknowledged until all validations as applicable are completed. If the attributes are validated, the Performance Report moves to the In-Progress state. If not all attributes are validated, the report moves to the Rejected state. |
        | completed    | A Performance Report is completed and results are available.                                                                                                                                                                                                                                                                                                                                                                   |
        | failed       | A Performance Report processing has failed.                                                                                                                                                                                                                                                                                                                                                                                    |
        | inProgress   | A Performance Report has successfully passed the validations checks and the report processing has started.                                                                                                                                                                                                                                                                                                                     |
        | rejected     | This state indicates that: <br>- Invalid information is provided in Create Performance Report request <br>- The request fails to meet validation rules for Performance Report delivery (processing).                                                                                                                                                                                                                           |
      enum:
        - acknowledged
        - completed
        - failed
        - inProgress
        - rejected
    PerformanceReport_Common:
      type: object
      description: >-
        The execution of PM Job results in Performance Measurement collections
        that provide Buyer/Client with performance objectives results.
      properties:
        description:
          type: string
          description: A free-text description of the performance report.
        performanceJob:
          $ref: '#/components/schemas/PerformanceJobRefOrValue'
          description: >-
            Defines the reference to Performance Monitoring Job or defines values
            from PerformanceJob type.
        reportingTimeframe:
          $ref: '#/components/schemas/ReportingTimeframe'
          description: >-
            Specifies the date range between which data points will be included
            in the report.
      required:
        - performanceJob
        - reportingTimeframe
    PerformanceReport_Create:
      allOf:
        - $ref: '#/components/schemas/PerformanceReport_Common'
        - type: object
      description: >-
        In some cases, performance statistics exist in the system. These 
        statistics can be collected with an ad-hoc Performance Report creation.
    PerformanceReport_Find:
      type: object
      description: >-
        This class represents a single list item for the response of
        the `listPerformanceReport` operation.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the report was created.
        description:
          type: string
          description: A free-text description of the Performance Report.
        id:
          type: string
          description: Unique identifier
        performanceJob:
          $ref: '#/components/schemas/PerformanceJobRefOrValue'
          description: >-
            Defines the reference to Performance Monitoring Job or defines values
            from PerformanceJob type.
        reportingTimeframe:
          $ref: '#/components/schemas/ReportingTimeframe'
          description: >-
            Specifies the date range between which data points will be included
            in the report.
        state:
          $ref: '#/components/schemas/PerformanceReportStateType'
          description: |-
            Possible values for the state of a Performance Report.
      required:
        - creationDate
        - id
        - performanceJob
        - reportingTimeframe
        - state
    RecurringSchedule:
      type: object
      description: >-
        A definition of recurring schedule to run a job based on the Cron 
        utility in Linux-like systems. It defines how the job should 
        periodically run at specified times, dates, or intervals. 
      properties:
        second:
          type: string
          description: >- 
            A definition of time (seconds) to run a job. Allowed values: 0-59, 
            and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list seprator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - */5 * * * * * -> run a job at every 5th second. 
              - */30 */1 * * * * -> run a job at every 30 seconds 
              past every minute.
        minute:
          type: string
          description: >-
            A definition of time (minutes) to run a job. Allowed values: 0-59, 
            and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list seprator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 */10 * * * * -> run a job at every 10th minute. 
              - 0 */30 0 * * * -> run a job at every 30th minute past midnight.
              - 0 */30 8 * * 1 -> run a job at every 30th minute 
              past hour 8 on Monday.
        hour:
          type: string
          description: >-
            A definition of time (hour) to run a job. Allowed values: 0-23, 
            and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list seprator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 0 10 10 * * -> run a job at 10 am on 10th day of every month. 
              - 0 * 1,2 * * * -> run a job at every minute past hour 1 and 2.
              - 0 0 */2 * * * -> run a job at every 2nd hour.
        dayOfMonth: 
          type: string
          description: >-
            A definition of time (day of month) to run a job. 
            Allowed values: 1-31, and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list seprator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 0 0 1,5,10,15 * * -> run a job at midnight 
              on every 1st, 5th, 10th, 15th day of month. 
              - 0 0 */1 1-10 1-3 * -> run a job at every full hour between 1st 
              and 10th day of month in January, February, and March.
        month: 
          type: string
          description: >-
            A definition of time (month) to run a job. Allowed
            values: 1-12 or JAN-DEC, and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list seprator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 5 0 * 8 * -> run a job at 00:05 on every day in August. 
              - 0 0 0,12 1 */2 * -> run a job at midnight and noon 
              on every 1st day of every 2nd month.
        dayOfWeek:
          type: string
          description: >-
            A definition of time (day of week) to run a job. Allowed
            values: 0-6 or SUN-SAT, and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list seprator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 0 22 * * 1-5 -> run a job at 22:00 on every day 
              between Monday and Friday. 
              - 0 5 4 * * sun -> run a job at 04:05 on Sunday.
        hourRange:
          type: array
          description: >-
            A list of time ranges within a specific day that the schedule will
            be active on, for example, 08:00-12:00, 16:00-19:00.
          items:
            $ref: '#/components/schemas/HourRange'
            minItems: 1
    ReportContentItem:
      type: object
      description: >-
        Single item of the performance monitoring results in case result format
        was set to payload. Each item contains the timeframe of the collected data
        and a list of values measured in that timeframe.
      properties:
        measurementTime:
          $ref: '#/components/schemas/MeasurementTime'
          description: Timeframe boundary for collected data.
        measurementDataPoints:
          type: array
          items:
            $ref: '#/components/schemas/ResultPayload'
          description: >-
            List of performance monitoring values measured in the related
            timeframe.
      required:
        - measurementTime
        - measurementDataPoints
    ReportingTimeframe:
      type: object
      description: >-
        Specifies the date range between which data points will be included
        in the report.
      properties:
        reportingStartDate:
          type: string
          format: date-time
          description: Start date of reporting timeframe.
        reportingEndDate:
          type: string
          format: date-time
          description: End date of reporting timeframe.
    ResultFormat:
      type: string
      description: >-
        List of possible result formats that define how Seller/Server will
        deliver Performance Report to the Buyer/Client.
      enum:
        - attachment
        - payload
    ResultPayload:
      type: object
      description: >-
        ResultPayload is used as an extension point for MEF-specific service
        performance monitoring results. The `@type` attribute is used as a
        discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: >-
            The name that uniquely identifies the type of performance monitoring
            results that are returned by the Performance Report. In the case of MEF
            services, this is the URN provided in the performance monitoring results
            specification. The named type must be a subclass of ResultPayload.
      required:
        - '@type'
    ScheduleDefinition:
      type: object
      description: The schedule definition for running jobs.
      properties:
        scheduleDefinitionStartTime:
          type: string
          format: date-time
          description: >-
            The start time of the Schedule Definition. If the attribute is 
            empty the Schedule starts immediately after provisioning of the Job.
        scheduleDefinitionEndTime:
          type: string
          format: date-time
          description: >-
            The end time of the Schedule Definition. If the attribute is empty
            the Schedule runs forever, not having a time constraint.
        recurringSchedule:
          $ref: '#/components/schemas/RecurringSchedule'
          description: >-
            A recurring frequency to run a job within a timeframe defined 
            by schedule definition, for example, every 5 minutes, 15 minutes, 
            1 hour, 1 day. If the attribute is empty, job runs non-stop.
        executionDuration:
          $ref: '#/components/schemas/Interval'
          description: >-
            Total time for running one execution of a schedule. Depending 
            on the reportingPeriod attribute, one execution of a schedule might
            produce multiple reports (e.g., when reporting period is 15 minutes 
            and executionDuration is 1 hour, every execution of a schedule will
            produce 4 reports).
    ServiceId:
      allOf:
        - $ref: '#/components/schemas/MonitoredObjectId'
        - type: object
          properties:
            serviceIdFrom: 
              type: string
              description: >-
                Identifier of a Service Endpoint.
            serviceIdTo:
              type: string
              description: >-
                Identifier of a Service Endpoint.
          required:
            - serviceIdFrom
            - serviceIdTo
      description: >-
        Identifier of a Service.
    ServicePayloadSpecificAttributes:
      type: object
      description: >-
        ServicePayloadSpecificAttributes is used as an extension point for 
        MEF-specific service performance monitoring configuration. The `@type`
        attribute is used as a discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: >-
            Uniquely identifies the type of performance monitoring
            configuration that specifies PM objectives. In the case of MEF services,
            this is the URN provided in the performance monitoring configuration
            specification. The named type must be a subclass of
            ServicePayloadSpecificAttributes.
      required:
        - '@type'
    TrackingRecord:
      type: object
      description: >-
        Tracking Records allow the tracking of modifications of 
        Performance Job, Profile, or Report.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the record was created.
        description:
          type: string
          description: >-
            Free-text field describing the action that
            created the Tracking Record and its details.
        id:
          type: string
          description: Identifier of the Tracking Record.
        relatedObjectId:
          type: string
          description: Identifier of Performance Job, Profile or Report.
        request:
          type: string
          description: Request that created the Tracking Record.
        system:
          type: string
          description: Describes the system from which the action was done.
        user:
          type: string
          description: Describes the user doing the action.
      required:
        - creationDate
        - id
        - relatedObjectId
    TrackingRecord_Find:
      type: object
      description: >-
        This class represents a single list item for the response of
        the `listTrackingRecord` operation.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the record was created.
        description:
          type: string
          description: >-
            Describes the action that created the Tracking Record, such as:
            create, update.
        id:
          type: string
          description: Identifier of the Tracking Record.
        relatedObjectId:
          type: string
          description: Identifier of Performance Job, Profile or Report.
        user:
          type: string
          description: >-
            User that executed the action which created a Tracking Record.
      required:
        - creationDate
        - id
        - relatedObjectId